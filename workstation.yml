---
# Tasks to be done as root
- hosts: localhost
  vars:
    ansible_become: true
    ansible_become_method: sudo
    ansible_become_user: root

  roles:
    - gantsign.golang

  handlers:
    - name: config NetworkManger.conf for default dns
      lineinfile:
        dest: /etc/NetworkManager/NetworkManager.conf
        line: dns=default
        insertafter: '\[main\]'
      listen: enable default dns
    - name: remove resolv.conf
      file:
        dest: /etc/resolv.conf
        state: absent
      listen: enable default dns
    - name: restart network-manager
      systemd:
        name: network-manager
        state: restarted
      listen: enable default dns
    - name: wait for dns
      wait_for:
        host: google.com
        port: 80
        timeout: 60
      listen: enable default dns
    - name: restart autofs
      service:
        name: autofs
        state: restarted

  tasks:
    - name: disable systemd-resolved service
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: false
      notify:
        - enable default dns
    - name: flush handlers
      meta: flush_handlers
    - name: allow nopasswd sudo
      lineinfile:
        dest: /etc/sudoers
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'
    - name: apt keys
      tags: packages
      apt_key:
        url: "{{ item }}"
        state: present
      with_items:
        - https://www.virtualbox.org/download/oracle_vbox_2016.asc
        - https://www.virtualbox.org/download/oracle_vbox.asc
        - https://packages.cloud.google.com/apt/doc/apt-key.gpg
        - https://packages.microsoft.com/keys/microsoft.asc
    - name: apt repositories
      tags: packages
      apt_repository:
        repo: "{{ item }}"
        update_cache: false
      with_items:
        - 'ppa:nextcloud-devs/client'
        - deb http://download.virtualbox.org/virtualbox/debian bionic contrib
        - deb http://apt.kubernetes.io/ kubernetes-xenial main
        - deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main
    - name: apt vscode repo
      tags: packages
      apt_repository:
        repo: deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main
        update_cache: false
        filename: vscode
    - name: update apt cache
      tags: packages
      apt:
        update_cache: true
      changed_when: false
    - name: workstation packages
      tags: packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - vim
        - ansible
        - terminator
        - zsh
        - nextcloud-client
        - fonts-hack-web
        - network-manager-openconnect
        - network-manager-openconnect-gnome
        - network-manager-l2tp
        - network-manager-l2tp-gnome
        - network-manager-openvpn
        - network-manager-openvpn-gnome
        - virtualbox-5.2
        - dkms
        - mesa-utils
        - whois
        - remmina
        - remmina-plugin-rdp
        - freerdp-x11
        - default-jre
        - virtualenv
        - gstreamer1.0-libav
        - docker.io
        - docker-compose
        - qemu-kvm
        - libvirt-bin
        - bridge-utils
        - virt-manager
        - gimp
        - ssh-askpass-fullscreen
        - npm
        - awscli
        - virtualenvwrapper
        - nmap
        - jq
        - python-boto
        - python3-boto
        - xournal
        - nfs-common
        - autofs
        - cowsay
        - apt-transport-https
        - kubectl
        - pwgen
        - python-pip
        - code
    - name: slack package
      tags: packages
      apt:
        deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.0.1-amd64.deb
    - name: local user shell
      user:
        name: "{{ ansible_env.SUDO_USER }}"
        shell: /usr/bin/zsh
    - name: autofs enable
      lineinfile:
        dest: /etc/auto.master
        regexp: '^#/net'
        line: '/net   -hosts'
        backrefs: true
      notify:
        - restart autofs
    - name: enable autofs service
      service:
        name: autofs
        enabled: yes
    - name: add user to docker group
      user:
        name: "{{ ansible_env.SUDO_USER }}"
        groups: docker
        append: yes

# Tasks to be done as "{{ ansible_env.SUDO_USER }}"
- hosts: localhost
  tags: local_user
  vars:
    ansible_become: false
  tasks:
    - name: home bin dir
      file:
        dest: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
    - name: minikube
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: "{{ ansible_env.HOME }}/.local/bin/minikube"
        mode: 0755
    - name: download aws zsh completion
      get_url:
        url: https://raw.githubusercontent.com/aws/aws-cli/develop/bin/aws_zsh_completer.sh
        dest: "{{ ansible_env.HOME }}/.local/bin/aws_zsh_completer.sh"
        mode: 0755
    - name: download aws-iam-authenticator
      get_url:
        url: https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
        dest: "{{ ansible_env.HOME }}/.local/bin/aws-iam-authenticator"
        mode: 0755
    - name: copy vimrc
      copy:
        src: files/vimrc
        dest: "{{ ansible_env.HOME }}/.vimrc"
    - name: copy terminator config
      copy:
        src: files/terminator
        dest: "{{ ansible_env.HOME }}/.config"
    - name: install oh-my-zsh
      git:
        repo: git://github.com/robbyrussell/oh-my-zsh.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
    - name: .zsh directory
      file:
        dest: "{{ ansible_env.HOME }}/.zsh"
        state: directory
    - name: download docker tab completion
      get_url:
        url: https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker
        dest: "{{ ansible_env.HOME }}/.zsh"
    - name: copy zshrc
      template:
        src: files/zshrc.j2
        dest: "{{ ansible_env.HOME }}/.zshrc"
    - name: oh-my-zsh custom theme directory
      file:
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes"
        state: directory
    - name: copy custom theme
      copy:
        src: files/gentoo-mod.zsh-theme
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes"
    - name: .kube directory
      file:
        dest: "{{ ansible_env.HOME}}/.kube"
        state: directory
    - name: copy kube config files
      copy:
        src: "files/kube/{{ item }}"
        dest: "{{ ansible_env.HOME}}/.kube/{{ item }}"
      with_items:
        - dev-eks
        - qa-eks
        - uat-eks
        - prod-eks01
