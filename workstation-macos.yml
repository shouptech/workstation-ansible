---
# Tasks to be done as root
- hosts: localhost
  vars:
    ansible_become: true
    ansible_become_method: sudo
    ansible_become_user: root

    # Where to find the One Password Client
    op_client_url: "https://cache.agilebits.com/dist/1P/op/pkg/v0.9.2/op_darwin_amd64_v0.9.2.pkg"
    op_client_checksum: "sha256:4cc9fa12452af7de51299abbe46c4b68c3399543943ce9a46b7ebc950949f77c"


  tasks:
    - name: local user shell
      user:
        name: "{{ ansible_env.SUDO_USER }}"
        shell: /bin/zsh

    - name: Stat OP client
      stat:
        path: /usr/local/bin/op
      register: op_client_stat

    - name: OP client temp directory
      tempfile:
        state: directory
      register: op_tempdir
      when: not op_client_stat.stat.exists

    - name: Get OP client
      get_url:
        url: "{{ op_client_url }}"
        checksum: "{{ op_client_checksum }}"
        dest: "{{ op_tempdir.path }}/op.pkg"
      when: not op_client_stat.stat.exists

    - name: Run OP installer
      shell: installer -pkg "{{ op_tempdir.path }}/op.pkg" -target /Applications
      when: not op_client_stat.stat.exists

    - name: Remove OP tempdir
      file:
        path: "{{ op_tempdir.path }}"
        state: absent
      when: not op_client_stat.stat.exists


# Tasks to be done as local user
- hosts: localhost
  tags: local_user
  vars:
    ansible_become: false

    # Version of ruby to setup
    ruby_version: "2.6.3"

  tasks:
    - name: home bin dir
      file:
        dest: "{{ ansible_env.HOME }}/.local/bin"
        state: directory

    - name: Brew tap
      homebrew_tap:
        name:
          - versent/homebrew-taps
        state: present

    - name: Brew install
      homebrew:
        name:
          - gnupg
          - ansible
          - go
          - packer
          - saml2aws
          - terraform@0.11
          - kubernetes-cli
          - awscli
          - aws-iam-authenticator
          - rbenv
          - ruby-build
          - node
          - fluxctl
          - tfenv
        state: present

    - name: Default to python3
      file:
        path: /usr/local/bin/python
        src: /usr/local/bin/python3
        state: link

    - name: Brew cask
      homebrew_cask:
        name:
          - vscodium
          - vagrant
          - mysqlworkbench
          - nextcloud
          - docker
        state: present

    - name: Pip packages
      pip:
        executable: /usr/local/bin/pip3
        name:
          - virtualenvwrapper
        state: present
        extra_args: --user

    - name: download aws zsh completion
      get_url:
        url: https://raw.githubusercontent.com/aws/aws-cli/develop/bin/aws_zsh_completer.sh
        dest: "{{ ansible_env.HOME }}/.local/bin/aws_zsh_completer.sh"
        mode: 0755

    - name: copy vimrc
      copy:
        src: files/vimrc
        dest: "{{ ansible_env.HOME }}/.vimrc"

    - name: install oh-my-zsh
      git:
        repo: git://github.com/robbyrussell/oh-my-zsh.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh"

    - name: .zsh directory
      file:
        dest: "{{ ansible_env.HOME }}/.zsh"
        state: directory

    - name: download docker tab completion
      get_url:
        url: https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker
        dest: "{{ ansible_env.HOME }}/.zsh"

    - name: copy zshrc
      template:
        src: files/zshrc.j2
        dest: "{{ ansible_env.HOME }}/.zshrc"

    - name: oh-my-zsh custom theme directory
      file:
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes"
        state: directory

    - name: copy custom theme
      copy:
        src: files/gentoo-mod.zsh-theme
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes"

    - name: Check for Ruby {{ ruby_version }}
      stat:
        path: "{{ ansible_env.HOME }}/.rbenv/versions/{{ ruby_version }}"
      register: ruby_stat

    - name: Install Ruby
      shell: "rbenv install {{ ruby_version }}"
      when: not ruby_stat.stat.exists

    - name: Set global Ruby
      shell: "rbenv global {{ ruby_version }}"
      when: not ruby_stat.stat.exists

    - name: Download repo clone script
      get_url:
        url: https://gitlab.com/snippets/1943646/raw
        dest: "{{ ansible_env.HOME }}/.local/bin/clone_repo"
        mode: "0755"
